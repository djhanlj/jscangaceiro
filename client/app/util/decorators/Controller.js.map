{"version":3,"sources":["../../../app-src/util/decorators/Controller.js"],"names":["controller","seletores","elements","map","seletor","document","querySelector","constructor","constructorOriginal","constructorNovo","instance","Object","getOwnPropertyNames","prototype","forEach","property","Reflect","hasMetadata","associaEvento","getMetadata","metadado","selector","addEventListener","event","prevent","preventDefault","propertyKey"],"mappings":";;;AAAO,aAASA,UAAT,CAAoB,GAAGC,SAAvB,EAAkC;;AAErC,cAAMC,WAAWD,UAAUE,GAAV,CAAcC,WAC3BC,SAASC,aAAT,CAAuBF,OAAvB,CADa,CAAjB;;AAGA,eAAO,UAAUG,WAAV,EAAuB;AAC1B,kBAAMC,sBAAsBD,WAA5B;AACA,kBAAME,kBAAkB,YAAY;AAChC,sBAAMC,WAAW,IAAIF,mBAAJ,CAAwB,GAAGN,QAA3B,CAAjB;;AAEA;AACAS,uBAAOC,mBAAP,CAA2BJ,oBAAoBK,SAA/C,EACKC,OADL,CACaC,YAAY;AACjB,wBAAIC,QAAQC,WAAR,CAAoB,WAApB,EAAiCP,QAAjC,EAA2CK,QAA3C,CAAJ,EAA0D;AACtDG,sCAAcR,QAAd,EAAwBM,QAAQG,WAAR,CAAoB,WAApB,EAAiCT,QAAjC,EAA2CK,QAA3C,CAAxB;AACH;AACJ,iBALL;AAMH,aAVD;;AAYA;AACAN,4BAAgBI,SAAhB,GAA4BL,oBAAoBK,SAAhD;AACA;AACA,mBAAOJ,eAAP;AAEH,SAnBD;AAoBH;;0BAzBeT,U;;AA4BhB,aAASkB,aAAT,CAAuBR,QAAvB,EAAiCU,QAAjC,EAA2C;AACvCf,iBACKC,aADL,CACmBc,SAASC,QAD5B,EAEKC,gBAFL,CAEsBF,SAASG,KAF/B,EAEsCA,SAAS;AACvC,gBAAIH,SAASI,OAAb,EAAsBD,MAAME,cAAN;AACtBf,qBAASU,SAASM,WAAlB,EAA+BH,KAA/B;AACH,SALL;AAMH","file":"Controller.js","sourcesContent":["export function controller(...seletores) {\n\n    const elements = seletores.map(seletor =>\n        document.querySelector(seletor));\n\n    return function (constructor) {\n        const constructorOriginal = constructor;\n        const constructorNovo = function () {\n            const instance = new constructorOriginal(...elements);\n\n            // varre cada propriedade da classe\n            Object.getOwnPropertyNames(constructorOriginal.prototype)\n                .forEach(property => {\n                    if (Reflect.hasMetadata('bindEvent', instance, property)) {\n                        associaEvento(instance, Reflect.getMetadata('bindEvent', instance, property));\n                    }\n                });\n        }\n\n        // ajustando o prototype\n        constructorNovo.prototype = constructorOriginal.prototype;\n        // retornando o novo constructor\n        return constructorNovo;\n\n    }\n}\n\n\nfunction associaEvento(instance, metadado) {\n    document\n        .querySelector(metadado.selector)\n        .addEventListener(metadado.event, event => {\n            if (metadado.prevent) event.preventDefault();\n            instance[metadado.propertyKey](event);\n        });\n}"]}