{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obtemNegociacoesdoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,2CAA2B;AACvB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CACzB,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CADyB,EACFF,OAAOG,UADL,EACiBH,OAAOI,KADxB,CAApB,CAFV,EAKCC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBAPF,CAAP;AAUH;;AAEDe,mDAAmC;AAC/B,2BAAO,KAAKZ,KAAL,CAAWE,GAAX,CAAe,sBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CACzB,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CADyB,EACFF,OAAOG,UADL,EACiBH,OAAOI,KADxB,CAApB,CAFV,EAKCC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAPF,CAAP;AAUH;;AAEDgB,oDAAoC;AAChC,2BAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,uBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CACzB,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CADyB,EACFF,OAAOG,UADL,EACiBH,OAAOI,KADxB,CAApB,CAFV,EAKCC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBAPF,CAAP;AAUH;;AAEKiB,yCAAN,GAAkC;AAAA;;AAAA;;AAE9B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKhB,wBAAL,EAD4B,EAE5B,MAAKW,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;;AAMA,mCAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUD,EAAEf,IAAF,CAAOiB,OAAP,KAAmBD,EAAEhB,IAAF,CAAOiB,OAAP,EAA7B;AAAA,6BAFH,CAAP;AAIH,yBAXD,CAWE,OAAOd,GAAP,EAAY;AACVe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA,kCAAM,IAAId,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AAhB6B;AAiBjC;AA9D0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana() {\n        return this._http.get('negociacoes/semana')\n            .then(\n                dados => dados.map(objeto => new Negociacao(\n                    new Date(objeto.data), objeto.quantidade, objeto.valor\n                )),\n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações');\n                }\n            )\n\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n        return this._http.get('negociacoes/anterior')\n            .then(\n                dados => dados.map(objeto => new Negociacao(\n                    new Date(objeto.data), objeto.quantidade, objeto.valor\n                )),\n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n                }\n            )\n\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n        return this._http.get('negociacoes/retrasada')\n            .then(\n                dados => dados.map(objeto => new Negociacao(\n                    new Date(objeto.data), objeto.quantidade, objeto.valor\n                )),\n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações da semana retrasada');\n                }\n            )\n\n    }\n\n    async obtemNegociacoesdoPeriodo() {\n\n        try {\n            let periodo = await Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada(),\n            ]);\n\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => a.data.getTime() - b.data.getTime());\n\n        } catch (err) {\n            console.log(err);\n            throw new ApplicationException('Não foi possível obter as negociações do período')\n        }\n    }\n}"]}