{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","getExceptionMessage","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inpuQuantidade","_inpuValor","_service","_negociacoes","_mensagem","_init","dao","negociacoes","listaTodos","forEach","adiciona","negociacao","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","value","focus","console","log","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesdoPeriodo","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind, getExceptionMessage } from '../util/index.js';\n\nexport class NegociacaoController {\n\n    constructor() {\n        const $ = document.querySelector.bind(document);\n        this._inputData = $('#data');\n        this._inpuQuantidade = $('#quantidade');\n        this._inpuValor = $('#valor');\n\n        this._service = new NegociacaoService();\n\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia'\n        );\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto',\n        );\n\n        this._init();\n\n    }\n\n    async _init() {\n        try {\n            const dao = await getNegociacaoDao();\n            const negociacoes = await dao.listaTodos();\n            negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n        } catch (err) {\n            // err.message extrai apenas a mensagem de erro da exceçã\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    async adiciona(event) {\n\n        try {\n            event.preventDefault();\n\n            const negociacao = this._criaNegociacao()\n\n            const dao = await getNegociacaoDao();\n            await dao.adiciona(negociacao);\n            this._negociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociação adicionada com sucesso';\n            this._limpaFormulario();\n\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inpuQuantidade.value = 1;\n        this._inpuValor.value = 0.0;\n        this._inputData.focus();\n        console.log('formulário limpo');\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inpuQuantidade.value),\n            parseFloat(this._inpuValor.value)\n        );\n    }\n\n    async apaga() {\n        try {\n            const dao = await getNegociacaoDao();\n            await dao.apagaTodos();\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso';\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    async importaNegociacoes() {\n        try {\n            const negociacoes = await this._service.obtemNegociacoesdoPeriodo();\n            negociacoes.filter(novaNegociacao => !this._negociacoes.paraArray()\n                .some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n\n            this._mensagem.texto = 'Negociações importadas com sucesso';\n\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n}\n"]}