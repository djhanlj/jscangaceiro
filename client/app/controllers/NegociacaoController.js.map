{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","getExceptionMessage","debounce","controller","bindEvent","NegociacaoController","constructor","_inputData","_inputQuantidade","_inputValor","Object","assign","_service","_negociacoes","_mensagem","_init","dao","negociacoes","listaTodos","forEach","adiciona","negociacao","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","value","focus","console","log","paraData","parseInt","parseFloat","importaNegociacoes","obtemNegociacoesdoPeriodo","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente","apaga","apagaTodos","esvazia"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind, getExceptionMessage, debounce, controller, bindEvent } from '../util/index.js';\n\n@controller('#data', '#quantidade', '#valor')\nexport class NegociacaoController {\n\n    constructor(_inputData, _inputQuantidade, _inputValor) {\n        Object.assign(this, {\n            _inputData, _inputQuantidade, _inputValor\n        })\n\n        this._service = new NegociacaoService();\n\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia'\n        );\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto',\n        );\n\n        this._init();\n\n    }\n\n    async _init() {\n        try {\n            const dao = await getNegociacaoDao();\n            const negociacoes = await dao.listaTodos();\n            negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n        } catch (err) {\n            // err.message extrai apenas a mensagem de erro da exceçã\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    @bindEvent('submit', '.form')\n    @debounce()\n    async adiciona(event) {\n\n        try {\n            event.preventDefault();\n\n            const negociacao = this._criaNegociacao()\n\n            const dao = await getNegociacaoDao();\n            await dao.adiciona(negociacao);\n            this._negociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociação adicionada com sucesso';\n            this._limpaFormulario();\n\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n        console.log('formulário limpo');\n    }\n\n    _criaNegociacao() {\n        console.log(this);\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n    \n    @bindEvent('click', '#botao-importa')\n    @debounce()\n    async importaNegociacoes() {\n        try {\n            const negociacoes = await this._service.obtemNegociacoesdoPeriodo();\n            negociacoes.filter(novaNegociacao => !this._negociacoes.paraArray()\n                .some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n\n            this._mensagem.texto = 'Negociações importadas com sucesso';\n\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    @bindEvent('click', '#botao-apaga')\n    async apaga() {\n        try {\n            const dao = await getNegociacaoDao();\n            await dao.apagaTodos();\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso';\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n}\n"]}