{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","Error","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obtemNegociacoesdoPeriodo","Promise","all","periodo","reduce","novoArray","item","concat","sort","a","b","getTime","catch"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;;AAEDK,2CAA2B;AACvB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CACzB,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADyB,EACFF,OAAOG,UADL,EACiBH,OAAOI,KADxB,CAApB,CAFV,EAKCC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH,qBAPF,CAAP;AAUH;;AAEDC,mDAAmC;AAC/B,2BAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,sBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CACzB,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADyB,EACFF,OAAOG,UADL,EACiBH,OAAOI,KADxB,CAApB,CAFV,EAKCC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACH,qBAPF,CAAP;AAUH;;AAEDE,oDAAoC;AAChC,2BAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,uBAAf,EACFC,IADE,CAECC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CACzB,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CADyB,EACFF,OAAOG,UADL,EACiBH,OAAOI,KADxB,CAApB,CAFV,EAKCC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBAPF,CAAP;AAUH;;AAEDG,4CAA4B;AACxB,2BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKhB,wBAAL,EADe,EAEf,KAAKY,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAKHX,IALG,CAKEe,WAAWA,QAAQC,MAAR,CAAe,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAApC,EAA4D,EAA5D,EACXE,IADW,CACN,CAACC,CAAD,EAAIC,CAAJ,KAAUD,EAAEhB,IAAF,CAAOkB,OAAP,KAAmBD,EAAEjB,IAAF,CAAOkB,OAAP,EADvB,CALb,EAQFC,KARE,CAQIhB,OAAO;AACV,8BAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH,qBAVE,CAAP;AAWH;AAzD0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana() {\n        return this._http.get('negociacoes/semana')\n            .then(\n                dados => dados.map(objeto => new Negociacao(\n                    new Date(objeto.data), objeto.quantidade, objeto.valor\n                )),\n                err => {\n                    throw new Error('Não foi possível obter as negociações');\n                }\n            )\n\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n        return this._http.get('negociacoes/anterior')\n            .then(\n                dados => dados.map(objeto => new Negociacao(\n                    new Date(objeto.data), objeto.quantidade, objeto.valor\n                )),\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana anterior');\n                }\n            )\n\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n        return this._http.get('negociacoes/retrasada')\n            .then(\n                dados => dados.map(objeto => new Negociacao(\n                    new Date(objeto.data), objeto.quantidade, objeto.valor\n                )),\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana retrasada');\n                }\n            )\n\n    }\n\n    obtemNegociacoesdoPeriodo() {\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada(),\n        ]).\n            then(periodo => periodo.reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => a.data.getTime() - b.data.getTime())\n            )\n            .catch(err => {\n                throw new Error('Não foi possível obter as negociações do período')\n            });\n    }\n}"]}